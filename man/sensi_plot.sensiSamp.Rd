% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/plot_samp_phylolm.R
\name{sensi_plot.sensiSamp}
\alias{sensi_plot.sensiSamp}
\title{Graphical diagnostics for class 'sensiSamp'}
\usage{
\method{sensi_plot}{sensiSamp}(x, graphs = "all", param = "slope", ...)
}
\arguments{
\item{x}{output from \code{samp_phylolm}}

\item{graphs}{choose which graph should be printed on the output ("all", 1,2,3 or 4)}

\item{param}{choose which model parameter should be ploted  ("intercept" or "slope")}

\item{...}{further arguments to methods}
}
\description{
\code{plot_samp_phylolm} Plot results from \code{samp_phylolm} and
\code{influ_phyloglm}
}
\details{
For 'x' from samp_phylolm or samp_phyloglm:

Graph 1: Estimated slopes or intercepts for each simution across
percentage of species removed. Colours represent percentage
of change in comparison with the full model (blue = lower than 5, orange =
between 5 and 10 and red = higher than 10).
The red horizontal line represents the original slope or
intercept from the full model (with all species).

Graph 2: The proportion of estimated slopes and intercepts in each category
across the percentage of species removed.

Graph 3: Estimated phylogenetic model parameter for each simulation across
the percentage of species removed.

Graph 4: The percentage of significant slopes or intercepts across the
percentage of species removed.
}
\examples{
\dontrun{
library(sensiPhy)

#Generate a random tree
set.seed(2468)
tree <- rtree(100)

#Generate random predictor variable (pred), evolving according to a BM model.
pred<- rTraitCont(tree,root.value=0,sigma=1,model="BM")

#Generate two continous traits, one evolving highly correlated with the
#predictor (trait 1), and one evolving more randomly (trait 2)
cont_trait <- pred + rTraitCont(tree,model="BM",sigma=0.1)

#Generate two binary traits, one highly correlated to pred (trait 1), the other less.
bin_trait <-rbinTrait(n=1,tree,beta=c(-1,0.5),alpha=0.1,
                     X=cbind(rep(1,length(tree$tip.label)),pred))
dat<-data.frame(pred,cont_trait,bin_trait)

#Determine influential species for both regressions.
fit1 <- samp_phylolm(cont_trait ~ pred,data = dat,phy = tree)
fit2 <- samp_phyloglm(bin_trait ~ pred,data = dat,phy = tree)

# Plot results:
sensi_plot(fit1)
sensi_plot(fit2)
# You can also choose which graph and parameter should be ploted:
sensi_plot(fit1, graphs = 1, param = "intercept")
sensi_plot(fit2, graphs = "all", param = "slope")
}
}
\author{
Gustavo Paterno
}
\seealso{
\code{\link[ggplot2]{ggplot}}, \code{\link[sensiPhy]{samp_phylolm}}
\code{\link[sensiPhy]{samp_phyloglm}}
}

